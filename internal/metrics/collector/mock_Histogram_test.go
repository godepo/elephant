// Code generated by mockery v2.53.3. DO NOT EDIT.

package collector

import mock "github.com/stretchr/testify/mock"

// MockHistogram is an autogenerated mock type for the Histogram type
type MockHistogram struct {
	mock.Mock
}

type MockHistogram_Expecter struct {
	mock *mock.Mock
}

func (_m *MockHistogram) EXPECT() *MockHistogram_Expecter {
	return &MockHistogram_Expecter{mock: &_m.Mock}
}

// Observe provides a mock function with given fields: since
func (_m *MockHistogram) Observe(since float64) {
	_m.Called(since)
}

// MockHistogram_Observe_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Observe'
type MockHistogram_Observe_Call struct {
	*mock.Call
}

// Observe is a helper method to define mock.On call
//   - since float64
func (_e *MockHistogram_Expecter) Observe(since interface{}) *MockHistogram_Observe_Call {
	return &MockHistogram_Observe_Call{Call: _e.mock.On("Observe", since)}
}

func (_c *MockHistogram_Observe_Call) Run(run func(since float64)) *MockHistogram_Observe_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(float64))
	})
	return _c
}

func (_c *MockHistogram_Observe_Call) Return() *MockHistogram_Observe_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHistogram_Observe_Call) RunAndReturn(run func(float64)) *MockHistogram_Observe_Call {
	_c.Run(run)
	return _c
}

// NewMockHistogram creates a new instance of MockHistogram. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockHistogram(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockHistogram {
	mock := &MockHistogram{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
